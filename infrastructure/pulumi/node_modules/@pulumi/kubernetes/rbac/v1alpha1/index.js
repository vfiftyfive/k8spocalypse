"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.RolePatch = exports.RoleList = exports.RoleBindingPatch = exports.RoleBindingList = exports.RoleBinding = exports.Role = exports.ClusterRolePatch = exports.ClusterRoleList = exports.ClusterRoleBindingPatch = exports.ClusterRoleBindingList = exports.ClusterRoleBinding = exports.ClusterRole = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.ClusterRole = null;
utilities.lazyLoad(exports, ["ClusterRole"], () => require("./clusterRole"));
exports.ClusterRoleBinding = null;
utilities.lazyLoad(exports, ["ClusterRoleBinding"], () => require("./clusterRoleBinding"));
exports.ClusterRoleBindingList = null;
utilities.lazyLoad(exports, ["ClusterRoleBindingList"], () => require("./clusterRoleBindingList"));
exports.ClusterRoleBindingPatch = null;
utilities.lazyLoad(exports, ["ClusterRoleBindingPatch"], () => require("./clusterRoleBindingPatch"));
exports.ClusterRoleList = null;
utilities.lazyLoad(exports, ["ClusterRoleList"], () => require("./clusterRoleList"));
exports.ClusterRolePatch = null;
utilities.lazyLoad(exports, ["ClusterRolePatch"], () => require("./clusterRolePatch"));
exports.Role = null;
utilities.lazyLoad(exports, ["Role"], () => require("./role"));
exports.RoleBinding = null;
utilities.lazyLoad(exports, ["RoleBinding"], () => require("./roleBinding"));
exports.RoleBindingList = null;
utilities.lazyLoad(exports, ["RoleBindingList"], () => require("./roleBindingList"));
exports.RoleBindingPatch = null;
utilities.lazyLoad(exports, ["RoleBindingPatch"], () => require("./roleBindingPatch"));
exports.RoleList = null;
utilities.lazyLoad(exports, ["RoleList"], () => require("./roleList"));
exports.RolePatch = null;
utilities.lazyLoad(exports, ["RolePatch"], () => require("./rolePatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRole":
                return new exports.ClusterRole(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRoleBinding":
                return new exports.ClusterRoleBinding(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRoleBindingList":
                return new exports.ClusterRoleBindingList(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRoleBindingPatch":
                return new exports.ClusterRoleBindingPatch(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRoleList":
                return new exports.ClusterRoleList(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRolePatch":
                return new exports.ClusterRolePatch(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:Role":
                return new exports.Role(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:RoleBinding":
                return new exports.RoleBinding(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:RoleBindingList":
                return new exports.RoleBindingList(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:RoleBindingPatch":
                return new exports.RoleBindingPatch(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:RoleList":
                return new exports.RoleList(name, undefined, { urn });
            case "kubernetes:rbac.authorization.k8s.io/v1alpha1:RolePatch":
                return new exports.RolePatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "rbac.authorization.k8s.io/v1alpha1", _module);
//# sourceMappingURL=index.js.map