"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuditSinkPatch = exports.AuditSinkList = exports.AuditSink = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.AuditSink = null;
utilities.lazyLoad(exports, ["AuditSink"], () => require("./auditSink"));
exports.AuditSinkList = null;
utilities.lazyLoad(exports, ["AuditSinkList"], () => require("./auditSinkList"));
exports.AuditSinkPatch = null;
utilities.lazyLoad(exports, ["AuditSinkPatch"], () => require("./auditSinkPatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:auditregistration.k8s.io/v1alpha1:AuditSink":
                return new exports.AuditSink(name, undefined, { urn });
            case "kubernetes:auditregistration.k8s.io/v1alpha1:AuditSinkList":
                return new exports.AuditSinkList(name, undefined, { urn });
            case "kubernetes:auditregistration.k8s.io/v1alpha1:AuditSinkPatch":
                return new exports.AuditSinkPatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "auditregistration.k8s.io/v1alpha1", _module);
//# sourceMappingURL=index.js.map