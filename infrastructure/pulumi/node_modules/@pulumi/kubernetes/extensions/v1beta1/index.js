"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplicaSetPatch = exports.ReplicaSetList = exports.ReplicaSet = exports.PodSecurityPolicyPatch = exports.PodSecurityPolicyList = exports.PodSecurityPolicy = exports.NetworkPolicyPatch = exports.NetworkPolicyList = exports.NetworkPolicy = exports.IngressPatch = exports.IngressList = exports.Ingress = exports.DeploymentPatch = exports.DeploymentList = exports.Deployment = exports.DaemonSetPatch = exports.DaemonSetList = exports.DaemonSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.DaemonSet = null;
utilities.lazyLoad(exports, ["DaemonSet"], () => require("./daemonSet"));
exports.DaemonSetList = null;
utilities.lazyLoad(exports, ["DaemonSetList"], () => require("./daemonSetList"));
exports.DaemonSetPatch = null;
utilities.lazyLoad(exports, ["DaemonSetPatch"], () => require("./daemonSetPatch"));
exports.Deployment = null;
utilities.lazyLoad(exports, ["Deployment"], () => require("./deployment"));
exports.DeploymentList = null;
utilities.lazyLoad(exports, ["DeploymentList"], () => require("./deploymentList"));
exports.DeploymentPatch = null;
utilities.lazyLoad(exports, ["DeploymentPatch"], () => require("./deploymentPatch"));
exports.Ingress = null;
utilities.lazyLoad(exports, ["Ingress"], () => require("./ingress"));
exports.IngressList = null;
utilities.lazyLoad(exports, ["IngressList"], () => require("./ingressList"));
exports.IngressPatch = null;
utilities.lazyLoad(exports, ["IngressPatch"], () => require("./ingressPatch"));
exports.NetworkPolicy = null;
utilities.lazyLoad(exports, ["NetworkPolicy"], () => require("./networkPolicy"));
exports.NetworkPolicyList = null;
utilities.lazyLoad(exports, ["NetworkPolicyList"], () => require("./networkPolicyList"));
exports.NetworkPolicyPatch = null;
utilities.lazyLoad(exports, ["NetworkPolicyPatch"], () => require("./networkPolicyPatch"));
exports.PodSecurityPolicy = null;
utilities.lazyLoad(exports, ["PodSecurityPolicy"], () => require("./podSecurityPolicy"));
exports.PodSecurityPolicyList = null;
utilities.lazyLoad(exports, ["PodSecurityPolicyList"], () => require("./podSecurityPolicyList"));
exports.PodSecurityPolicyPatch = null;
utilities.lazyLoad(exports, ["PodSecurityPolicyPatch"], () => require("./podSecurityPolicyPatch"));
exports.ReplicaSet = null;
utilities.lazyLoad(exports, ["ReplicaSet"], () => require("./replicaSet"));
exports.ReplicaSetList = null;
utilities.lazyLoad(exports, ["ReplicaSetList"], () => require("./replicaSetList"));
exports.ReplicaSetPatch = null;
utilities.lazyLoad(exports, ["ReplicaSetPatch"], () => require("./replicaSetPatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:extensions/v1beta1:DaemonSet":
                return new exports.DaemonSet(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:DaemonSetList":
                return new exports.DaemonSetList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:DaemonSetPatch":
                return new exports.DaemonSetPatch(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:Deployment":
                return new exports.Deployment(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:DeploymentList":
                return new exports.DeploymentList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:DeploymentPatch":
                return new exports.DeploymentPatch(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:Ingress":
                return new exports.Ingress(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:IngressList":
                return new exports.IngressList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:IngressPatch":
                return new exports.IngressPatch(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:NetworkPolicy":
                return new exports.NetworkPolicy(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:NetworkPolicyList":
                return new exports.NetworkPolicyList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:NetworkPolicyPatch":
                return new exports.NetworkPolicyPatch(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:PodSecurityPolicy":
                return new exports.PodSecurityPolicy(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:PodSecurityPolicyList":
                return new exports.PodSecurityPolicyList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:PodSecurityPolicyPatch":
                return new exports.PodSecurityPolicyPatch(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:ReplicaSet":
                return new exports.ReplicaSet(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:ReplicaSetList":
                return new exports.ReplicaSetList(name, undefined, { urn });
            case "kubernetes:extensions/v1beta1:ReplicaSetPatch":
                return new exports.ReplicaSetPatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "extensions/v1beta1", _module);
//# sourceMappingURL=index.js.map