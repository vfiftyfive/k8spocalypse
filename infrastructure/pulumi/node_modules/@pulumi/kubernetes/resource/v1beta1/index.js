"use strict";
// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceSlicePatch = exports.ResourceSliceList = exports.ResourceSlice = exports.ResourceClaimTemplatePatch = exports.ResourceClaimTemplateList = exports.ResourceClaimTemplate = exports.ResourceClaimPatch = exports.ResourceClaimList = exports.ResourceClaim = exports.DeviceClassPatch = exports.DeviceClassList = exports.DeviceClass = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.DeviceClass = null;
utilities.lazyLoad(exports, ["DeviceClass"], () => require("./deviceClass"));
exports.DeviceClassList = null;
utilities.lazyLoad(exports, ["DeviceClassList"], () => require("./deviceClassList"));
exports.DeviceClassPatch = null;
utilities.lazyLoad(exports, ["DeviceClassPatch"], () => require("./deviceClassPatch"));
exports.ResourceClaim = null;
utilities.lazyLoad(exports, ["ResourceClaim"], () => require("./resourceClaim"));
exports.ResourceClaimList = null;
utilities.lazyLoad(exports, ["ResourceClaimList"], () => require("./resourceClaimList"));
exports.ResourceClaimPatch = null;
utilities.lazyLoad(exports, ["ResourceClaimPatch"], () => require("./resourceClaimPatch"));
exports.ResourceClaimTemplate = null;
utilities.lazyLoad(exports, ["ResourceClaimTemplate"], () => require("./resourceClaimTemplate"));
exports.ResourceClaimTemplateList = null;
utilities.lazyLoad(exports, ["ResourceClaimTemplateList"], () => require("./resourceClaimTemplateList"));
exports.ResourceClaimTemplatePatch = null;
utilities.lazyLoad(exports, ["ResourceClaimTemplatePatch"], () => require("./resourceClaimTemplatePatch"));
exports.ResourceSlice = null;
utilities.lazyLoad(exports, ["ResourceSlice"], () => require("./resourceSlice"));
exports.ResourceSliceList = null;
utilities.lazyLoad(exports, ["ResourceSliceList"], () => require("./resourceSliceList"));
exports.ResourceSlicePatch = null;
utilities.lazyLoad(exports, ["ResourceSlicePatch"], () => require("./resourceSlicePatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:resource.k8s.io/v1beta1:DeviceClass":
                return new exports.DeviceClass(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:DeviceClassList":
                return new exports.DeviceClassList(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:DeviceClassPatch":
                return new exports.DeviceClassPatch(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:ResourceClaim":
                return new exports.ResourceClaim(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:ResourceClaimList":
                return new exports.ResourceClaimList(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:ResourceClaimPatch":
                return new exports.ResourceClaimPatch(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:ResourceClaimTemplate":
                return new exports.ResourceClaimTemplate(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:ResourceClaimTemplateList":
                return new exports.ResourceClaimTemplateList(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:ResourceClaimTemplatePatch":
                return new exports.ResourceClaimTemplatePatch(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:ResourceSlice":
                return new exports.ResourceSlice(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:ResourceSliceList":
                return new exports.ResourceSliceList(name, undefined, { urn });
            case "kubernetes:resource.k8s.io/v1beta1:ResourceSlicePatch":
                return new exports.ResourceSlicePatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "resource.k8s.io/v1beta1", _module);
//# sourceMappingURL=index.js.map