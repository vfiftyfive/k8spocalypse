import * as pulumi from "@pulumi/pulumi";
/**
 * Resource for managing an AWS WorkSpaces Web User Access Logging Settings resource. Once associated with a web portal, user access logging settings control how user access events are logged to Amazon Kinesis.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.kinesis.Stream("example", {
 *     name: "amazon-workspaces-web-example-stream",
 *     shardCount: 1,
 * });
 * const exampleUserAccessLoggingSettings = new aws.workspacesweb.UserAccessLoggingSettings("example", {kinesisStreamArn: example.arn});
 * ```
 *
 * ### With Tags
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.kinesis.Stream("example", {
 *     name: "example-stream",
 *     shardCount: 1,
 * });
 * const exampleUserAccessLoggingSettings = new aws.workspacesweb.UserAccessLoggingSettings("example", {
 *     kinesisStreamArn: example.arn,
 *     tags: {
 *         Name: "example-user-access-logging-settings",
 *         Environment: "Production",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import WorkSpaces Web User Access Logging Settings using the `user_access_logging_settings_arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:workspacesweb/userAccessLoggingSettings:UserAccessLoggingSettings example arn:aws:workspaces-web:us-west-2:123456789012:userAccessLoggingSettings/abcdef12345
 * ```
 */
export declare class UserAccessLoggingSettings extends pulumi.CustomResource {
    /**
     * Get an existing UserAccessLoggingSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserAccessLoggingSettingsState, opts?: pulumi.CustomResourceOptions): UserAccessLoggingSettings;
    /**
     * Returns true if the given object is an instance of UserAccessLoggingSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is UserAccessLoggingSettings;
    /**
     * List of web portal ARNs that this user access logging settings resource is associated with.
     */
    readonly associatedPortalArns: pulumi.Output<string[]>;
    /**
     * ARN of the Kinesis stream.
     *
     * The following arguments are optional:
     */
    readonly kinesisStreamArn: pulumi.Output<string>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    readonly tagsAll: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * ARN of the user access logging settings resource.
     */
    readonly userAccessLoggingSettingsArn: pulumi.Output<string>;
    /**
     * Create a UserAccessLoggingSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserAccessLoggingSettingsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering UserAccessLoggingSettings resources.
 */
export interface UserAccessLoggingSettingsState {
    /**
     * List of web portal ARNs that this user access logging settings resource is associated with.
     */
    associatedPortalArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ARN of the Kinesis stream.
     *
     * The following arguments are optional:
     */
    kinesisStreamArn?: pulumi.Input<string>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
     *
     * @deprecated Please use `tags` instead.
     */
    tagsAll?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * ARN of the user access logging settings resource.
     */
    userAccessLoggingSettingsArn?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a UserAccessLoggingSettings resource.
 */
export interface UserAccessLoggingSettingsArgs {
    /**
     * ARN of the Kinesis stream.
     *
     * The following arguments are optional:
     */
    kinesisStreamArn: pulumi.Input<string>;
    /**
     * Map of tags assigned to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
