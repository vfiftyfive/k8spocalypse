"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestApiPut = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.apigateway.RestApiPut("example", {
 *     body: JSON.stringify({
 *         swagger: "2.0",
 *         info: {
 *             title: "Example API",
 *             version: "v1",
 *         },
 *         schemes: ["https"],
 *         paths: {
 *             "/example": {
 *                 get: {
 *                     responses: {
 *                         "200": {
 *                             description: "OK",
 *                         },
 *                     },
 *                     "x-amazon-apigateway-integration": {
 *                         httpMethod: "GET",
 *                         type: "HTTP",
 *                         responses: {
 *                             "default": {
 *                                 statusCode: 200,
 *                             },
 *                         },
 *                         uri: "https://api.example.com/",
 *                     },
 *                 },
 *             },
 *         },
 *     }),
 *     failOnWarnings: true,
 *     restApiId: exampleAwsApiGatewayRestApi.id,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import API Gateway REST API Put using the `rest_api_id`. For example:
 *
 * ```sh
 * $ pulumi import aws:apigateway/restApiPut:RestApiPut example import-id-12345678
 * ```
 */
class RestApiPut extends pulumi.CustomResource {
    /**
     * Get an existing RestApiPut resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new RestApiPut(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of RestApiPut.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RestApiPut.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["failOnWarnings"] = state ? state.failOnWarnings : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["restApiId"] = state ? state.restApiId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["triggers"] = state ? state.triggers : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.body === undefined) && !opts.urn) {
                throw new Error("Missing required property 'body'");
            }
            if ((!args || args.restApiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restApiId'");
            }
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["failOnWarnings"] = args ? args.failOnWarnings : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["restApiId"] = args ? args.restApiId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["triggers"] = args ? args.triggers : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RestApiPut.__pulumiType, name, resourceInputs, opts);
    }
}
exports.RestApiPut = RestApiPut;
/** @internal */
RestApiPut.__pulumiType = 'aws:apigateway/restApiPut:RestApiPut';
//# sourceMappingURL=restApiPut.js.map