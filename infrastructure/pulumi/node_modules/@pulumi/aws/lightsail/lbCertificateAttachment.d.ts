import * as pulumi from "@pulumi/pulumi";
/**
 * Manages a Lightsail Load Balancer Certificate attachment to a Lightsail Load Balancer.
 *
 * Use this resource to attach a validated SSL/TLS certificate to a Lightsail Load Balancer to enable HTTPS traffic. The certificate must be validated before it can be attached to the load balancer.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.lightsail.Lb("example", {
 *     name: "example-load-balancer",
 *     healthCheckPath: "/",
 *     instancePort: 80,
 *     tags: {
 *         foo: "bar",
 *     },
 * });
 * const exampleLbCertificate = new aws.lightsail.LbCertificate("example", {
 *     name: "example-load-balancer-certificate",
 *     lbName: example.id,
 *     domainName: "example.com",
 * });
 * const exampleLbCertificateAttachment = new aws.lightsail.LbCertificateAttachment("example", {
 *     lbName: example.name,
 *     certificateName: exampleLbCertificate.name,
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import `aws_lightsail_lb_certificate_attachment` using the name attribute. For example:
 *
 * ```sh
 * $ pulumi import aws:lightsail/lbCertificateAttachment:LbCertificateAttachment example example-load-balancer,example-certificate
 * ```
 */
export declare class LbCertificateAttachment extends pulumi.CustomResource {
    /**
     * Get an existing LbCertificateAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbCertificateAttachmentState, opts?: pulumi.CustomResourceOptions): LbCertificateAttachment;
    /**
     * Returns true if the given object is an instance of LbCertificateAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LbCertificateAttachment;
    /**
     * Name of your SSL/TLS certificate.
     */
    readonly certificateName: pulumi.Output<string>;
    /**
     * Name of the load balancer to which you want to associate the SSL/TLS certificate.
     */
    readonly lbName: pulumi.Output<string>;
    /**
     * Create a LbCertificateAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LbCertificateAttachmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering LbCertificateAttachment resources.
 */
export interface LbCertificateAttachmentState {
    /**
     * Name of your SSL/TLS certificate.
     */
    certificateName?: pulumi.Input<string>;
    /**
     * Name of the load balancer to which you want to associate the SSL/TLS certificate.
     */
    lbName?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a LbCertificateAttachment resource.
 */
export interface LbCertificateAttachmentArgs {
    /**
     * Name of your SSL/TLS certificate.
     */
    certificateName: pulumi.Input<string>;
    /**
     * Name of the load balancer to which you want to associate the SSL/TLS certificate.
     */
    lbName: pulumi.Input<string>;
}
