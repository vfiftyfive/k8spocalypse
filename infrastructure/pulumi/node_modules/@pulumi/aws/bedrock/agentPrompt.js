"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AgentPrompt = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS Bedrock Agents Prompt.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.bedrock.AgentPrompt("example", {
 *     name: "MyPrompt",
 *     description: "My prompt description.",
 * });
 * ```
 *
 * ### With Variants
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.bedrock.AgentPrompt("example", {
 *     name: "MakePlaylist",
 *     description: "My first prompt.",
 *     defaultVariant: "Variant1",
 *     variants: [{
 *         name: "Variant1",
 *         modelId: "amazon.titan-text-express-v1",
 *         inferenceConfiguration: {
 *             text: {
 *                 temperature: 0.8,
 *             },
 *         },
 *         templateType: "TEXT",
 *         templateConfiguration: {
 *             text: {
 *                 text: "Make me a {{genre}} playlist consisting of the following number of songs: {{number}}.",
 *                 inputVariables: [
 *                     {
 *                         name: "genre",
 *                     },
 *                     {
 *                         name: "number",
 *                     },
 *                 ],
 *             },
 *         },
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import Bedrock Agents Prompt using the `id`. For example:
 *
 * ```sh
 * $ pulumi import aws:bedrock/agentPrompt:AgentPrompt example 1A2BC3DEFG
 * ```
 */
class AgentPrompt extends pulumi.CustomResource {
    /**
     * Get an existing AgentPrompt resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AgentPrompt(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AgentPrompt.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentPrompt.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["customerEncryptionKeyArn"] = state ? state.customerEncryptionKeyArn : undefined;
            resourceInputs["defaultVariant"] = state ? state.defaultVariant : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["variants"] = state ? state.variants : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["customerEncryptionKeyArn"] = args ? args.customerEncryptionKeyArn : undefined;
            resourceInputs["defaultVariant"] = args ? args.defaultVariant : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["variants"] = args ? args.variants : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgentPrompt.__pulumiType, name, resourceInputs, opts);
    }
}
exports.AgentPrompt = AgentPrompt;
/** @internal */
AgentPrompt.__pulumiType = 'aws:bedrock/agentPrompt:AgentPrompt';
//# sourceMappingURL=agentPrompt.js.map