"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getClusterVersionsOutput = exports.getClusterVersions = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Data source for managing AWS EKS (Elastic Kubernetes) Cluster Versions.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.eks.getClusterVersions({});
 * ```
 *
 * ### Filter by Cluster Type
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.eks.getClusterVersions({
 *     clusterType: "eks",
 * });
 * ```
 *
 * ### Filter by Version Status
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.eks.getClusterVersions({
 *     versionStatus: "STANDARD_SUPPORT",
 * });
 * ```
 */
function getClusterVersions(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:eks/getClusterVersions:getClusterVersions", {
        "clusterType": args.clusterType,
        "clusterVersionsOnlies": args.clusterVersionsOnlies,
        "defaultOnly": args.defaultOnly,
        "includeAll": args.includeAll,
        "versionStatus": args.versionStatus,
    }, opts);
}
exports.getClusterVersions = getClusterVersions;
/**
 * Data source for managing AWS EKS (Elastic Kubernetes) Cluster Versions.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.eks.getClusterVersions({});
 * ```
 *
 * ### Filter by Cluster Type
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.eks.getClusterVersions({
 *     clusterType: "eks",
 * });
 * ```
 *
 * ### Filter by Version Status
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.eks.getClusterVersions({
 *     versionStatus: "STANDARD_SUPPORT",
 * });
 * ```
 */
function getClusterVersionsOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:eks/getClusterVersions:getClusterVersions", {
        "clusterType": args.clusterType,
        "clusterVersionsOnlies": args.clusterVersionsOnlies,
        "defaultOnly": args.defaultOnly,
        "includeAll": args.includeAll,
        "versionStatus": args.versionStatus,
    }, opts);
}
exports.getClusterVersionsOutput = getClusterVersionsOutput;
//# sourceMappingURL=getClusterVersions.js.map