import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Retrieve information about an AWS WorkSpaces directory.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.workspaces.getDirectory({
 *     directoryId: "d-9067783251",
 * });
 * ```
 */
export declare function getDirectory(args: GetDirectoryArgs, opts?: pulumi.InvokeOptions): Promise<GetDirectoryResult>;
/**
 * A collection of arguments for invoking getDirectory.
 */
export interface GetDirectoryArgs {
    /**
     * Directory identifier for registration in WorkSpaces service.
     */
    directoryId: string;
    /**
     * A map of tags assigned to the WorkSpaces directory.
     */
    tags?: {
        [key: string]: string;
    };
}
/**
 * A collection of values returned by getDirectory.
 */
export interface GetDirectoryResult {
    /**
     * Configuration for Active Directory integration when `workspaceType` is set to `POOLS`.
     */
    readonly activeDirectoryConfigs: outputs.workspaces.GetDirectoryActiveDirectoryConfig[];
    /**
     * Directory alias.
     */
    readonly alias: string;
    readonly certificateBasedAuthProperties: outputs.workspaces.GetDirectoryCertificateBasedAuthProperty[];
    /**
     * User name for the service account.
     */
    readonly customerUserName: string;
    readonly directoryId: string;
    /**
     * Name of the directory.
     */
    readonly directoryName: string;
    /**
     * Directory type.
     */
    readonly directoryType: string;
    /**
     * IP addresses of the DNS servers for the directory.
     */
    readonly dnsIpAddresses: string[];
    /**
     * Identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.
     */
    readonly iamRoleId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Identifiers of the IP access control groups associated with the directory.
     */
    readonly ipGroupIds: string[];
    /**
     * Registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
     */
    readonly registrationCode: string;
    readonly samlProperties: outputs.workspaces.GetDirectorySamlProperty[];
    /**
     * The permissions to enable or disable self-service capabilities.
     */
    readonly selfServicePermissions: outputs.workspaces.GetDirectorySelfServicePermission[];
    /**
     * Identifiers of the subnets where the directory resides.
     */
    readonly subnetIds: string[];
    /**
     * A map of tags assigned to the WorkSpaces directory.
     */
    readonly tags: {
        [key: string]: string;
    };
    /**
     * The user identity type for the WorkSpaces directory.
     */
    readonly userIdentityType: string;
    /**
     * Specifies which devices and operating systems users can use to access their WorkSpaces.
     */
    readonly workspaceAccessProperties: outputs.workspaces.GetDirectoryWorkspaceAccessProperty[];
    /**
     * The default properties that are used for creating WorkSpaces.
     */
    readonly workspaceCreationProperties: outputs.workspaces.GetDirectoryWorkspaceCreationProperty[];
    /**
     * The description of the WorkSpaces directory when `workspaceType` is set to `POOLS`.
     */
    readonly workspaceDirectoryDescription: string;
    /**
     * The name of the WorkSpaces directory when `workspaceType` is set to `POOLS`.
     */
    readonly workspaceDirectoryName: string;
    /**
     * The identifier of the security group that is assigned to new WorkSpaces.
     */
    readonly workspaceSecurityGroupId: string;
    /**
     * The type of WorkSpaces directory.
     */
    readonly workspaceType: string;
}
/**
 * Retrieve information about an AWS WorkSpaces directory.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.workspaces.getDirectory({
 *     directoryId: "d-9067783251",
 * });
 * ```
 */
export declare function getDirectoryOutput(args: GetDirectoryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDirectoryResult>;
/**
 * A collection of arguments for invoking getDirectory.
 */
export interface GetDirectoryOutputArgs {
    /**
     * Directory identifier for registration in WorkSpaces service.
     */
    directoryId: pulumi.Input<string>;
    /**
     * A map of tags assigned to the WorkSpaces directory.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
