"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebBrowserSettings = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource for managing an AWS WorkSpaces Web Browser Settings resource.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.workspacesweb.BrowserSettings("example", {browserPolicy: JSON.stringify({
 *     AdditionalSettings: {
 *         DownloadsSettings: {
 *             Behavior: "DISABLE",
 *         },
 *     },
 * })});
 * ```
 *
 * ### With All Arguments
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = new aws.kms.Key("example", {
 *     description: "KMS key for WorkSpaces Web Browser Settings",
 *     deletionWindowInDays: 7,
 * });
 * const exampleBrowserSettings = new aws.workspacesweb.BrowserSettings("example", {
 *     browserPolicy: JSON.stringify({
 *         chromePolicies: {
 *             DefaultDownloadDirectory: {
 *                 value: "/home/as2-streaming-user/MyFiles/TemporaryFiles1",
 *             },
 *         },
 *     }),
 *     customerManagedKey: example.arn,
 *     additionalEncryptionContext: {
 *         Environment: "Production",
 *     },
 *     tags: {
 *         Name: "example-browser-settings",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Using `pulumi import`, import WorkSpaces Web Browser Settings using the `browser_settings_arn`. For example:
 *
 * ```sh
 * $ pulumi import aws:workspaces/webBrowserSettings:WebBrowserSettings example arn:aws:workspacesweb:us-west-2:123456789012:browsersettings/abcdef12345
 * ```
 *
 * @deprecated aws.workspaces/webbrowsersettings.WebBrowserSettings has been deprecated in favor of aws.workspacesweb/browsersettings.BrowserSettings
 */
class WebBrowserSettings extends pulumi.CustomResource {
    /**
     * Get an existing WebBrowserSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        pulumi.log.warn("WebBrowserSettings is deprecated: aws.workspaces/webbrowsersettings.WebBrowserSettings has been deprecated in favor of aws.workspacesweb/browsersettings.BrowserSettings");
        return new WebBrowserSettings(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WebBrowserSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebBrowserSettings.__pulumiType;
    }
    /** @deprecated aws.workspaces/webbrowsersettings.WebBrowserSettings has been deprecated in favor of aws.workspacesweb/browsersettings.BrowserSettings */
    constructor(name, argsOrState, opts) {
        pulumi.log.warn("WebBrowserSettings is deprecated: aws.workspaces/webbrowsersettings.WebBrowserSettings has been deprecated in favor of aws.workspacesweb/browsersettings.BrowserSettings");
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["additionalEncryptionContext"] = state ? state.additionalEncryptionContext : undefined;
            resourceInputs["associatedPortalArns"] = state ? state.associatedPortalArns : undefined;
            resourceInputs["browserPolicy"] = state ? state.browserPolicy : undefined;
            resourceInputs["browserSettingsArn"] = state ? state.browserSettingsArn : undefined;
            resourceInputs["customerManagedKey"] = state ? state.customerManagedKey : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tagsAll"] = state ? state.tagsAll : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.browserPolicy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'browserPolicy'");
            }
            resourceInputs["additionalEncryptionContext"] = args ? args.additionalEncryptionContext : undefined;
            resourceInputs["browserPolicy"] = args ? args.browserPolicy : undefined;
            resourceInputs["customerManagedKey"] = args ? args.customerManagedKey : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["associatedPortalArns"] = undefined /*out*/;
            resourceInputs["browserSettingsArn"] = undefined /*out*/;
            resourceInputs["tagsAll"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebBrowserSettings.__pulumiType, name, resourceInputs, opts);
    }
}
exports.WebBrowserSettings = WebBrowserSettings;
/** @internal */
WebBrowserSettings.__pulumiType = 'aws:workspaces/webBrowserSettings:WebBrowserSettings';
//# sourceMappingURL=webBrowserSettings.js.map