import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * This data source can be used to fetch information about a specific
 * EventBridge event bus. Use this data source to compute the ARN of
 * an event bus, given the name of the bus.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cloudwatch.getEventBus({
 *     name: "example-bus-name",
 * });
 * ```
 */
export declare function getEventBus(args: GetEventBusArgs, opts?: pulumi.InvokeOptions): Promise<GetEventBusResult>;
/**
 * A collection of arguments for invoking getEventBus.
 */
export interface GetEventBusArgs {
    /**
     * Name of the event bus.
     */
    name: string;
}
/**
 * A collection of values returned by getEventBus.
 */
export interface GetEventBusResult {
    /**
     * The ARN of the SQS queue specified as the target for the dead-letter queue.
     */
    readonly arn: string;
    /**
     * Configuration details of the Amazon SQS queue for EventBridge to use as a dead-letter queue (DLQ). This block has the following arguments:
     */
    readonly deadLetterConfigs: outputs.cloudwatch.GetEventBusDeadLetterConfig[];
    /**
     * Event bus description.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Identifier of the AWS KMS customer managed key for EventBridge to use to encrypt events on this event bus, if one has been specified.
     */
    readonly kmsKeyIdentifier: string;
    readonly name: string;
}
/**
 * This data source can be used to fetch information about a specific
 * EventBridge event bus. Use this data source to compute the ARN of
 * an event bus, given the name of the bus.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.cloudwatch.getEventBus({
 *     name: "example-bus-name",
 * });
 * ```
 */
export declare function getEventBusOutput(args: GetEventBusOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEventBusResult>;
/**
 * A collection of arguments for invoking getEventBus.
 */
export interface GetEventBusOutputArgs {
    /**
     * Name of the event bus.
     */
    name: pulumi.Input<string>;
}
