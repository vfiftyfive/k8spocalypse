"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGroupMembershipsOutput = exports.getGroupMemberships = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Use this data source to get a list of members in an Identity Store Group.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ssoadmin.getInstances({});
 * const exampleGetGroup = example.then(example => aws.identitystore.getGroup({
 *     identityStoreId: example.identityStoreIds?.[0],
 *     alternateIdentifier: {
 *         uniqueAttribute: {
 *             attributePath: "DisplayName",
 *             attributeValue: "ExampleGroup",
 *         },
 *     },
 * }));
 * const exampleGetGroupMemberships = Promise.all([example, exampleGetGroup]).then(([example, exampleGetGroup]) => aws.identitystore.getGroupMemberships({
 *     identityStoreId: example.identityStoreIds?.[0],
 *     groupId: exampleGetGroup.groupId,
 * }));
 * ```
 */
function getGroupMemberships(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws:identitystore/getGroupMemberships:getGroupMemberships", {
        "groupId": args.groupId,
        "identityStoreId": args.identityStoreId,
    }, opts);
}
exports.getGroupMemberships = getGroupMemberships;
/**
 * Use this data source to get a list of members in an Identity Store Group.
 *
 * ## Example Usage
 *
 * ### Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = aws.ssoadmin.getInstances({});
 * const exampleGetGroup = example.then(example => aws.identitystore.getGroup({
 *     identityStoreId: example.identityStoreIds?.[0],
 *     alternateIdentifier: {
 *         uniqueAttribute: {
 *             attributePath: "DisplayName",
 *             attributeValue: "ExampleGroup",
 *         },
 *     },
 * }));
 * const exampleGetGroupMemberships = Promise.all([example, exampleGetGroup]).then(([example, exampleGetGroup]) => aws.identitystore.getGroupMemberships({
 *     identityStoreId: example.identityStoreIds?.[0],
 *     groupId: exampleGetGroup.groupId,
 * }));
 * ```
 */
function getGroupMembershipsOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws:identitystore/getGroupMemberships:getGroupMemberships", {
        "groupId": args.groupId,
        "identityStoreId": args.identityStoreId,
    }, opts);
}
exports.getGroupMembershipsOutput = getGroupMembershipsOutput;
//# sourceMappingURL=getGroupMemberships.js.map